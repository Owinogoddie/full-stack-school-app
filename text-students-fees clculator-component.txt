'use client'

import { useState } from 'react'
import { calculateStudentFees } from '@/lib/actions/fees'

export default function FeeCalculator() {
  const [studentId, setStudentId] = useState('')
  const [loading, setLoading] = useState(false)
  const [feeData, setFeeData] = useState<any>(null)

  async function handleCalculate() {
    setLoading(true)
    try {
      const data = await calculateStudentFees(
        studentId,
        // Get these from context or props
        currentAcademicYearId,
        currentTermId
      )
      setFeeData(data)
    } catch (error) {
      console.error(error)
      // Handle error
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="p-4">
      <div className="flex gap-4 mb-4">
        <input
          type="text"
          value={studentId}
          onChange={(e) => setStudentId(e.target.value)}
          placeholder="Enter Student ID"
          className="border p-2 rounded"
        />
        <button
          onClick={handleCalculate}
          disabled={loading}
          className="bg-blue-500 text-white px-4 py-2 rounded"
        >
          Calculate Fees
        </button>
      </div>

      {feeData && (
        <div className="space-y-4">
          <h3 className="text-lg font-semibold">Fee Details</h3>
          
          <div className="border rounded p-4">
            {feeData.feeDetails.map((fee: any) => (
              <div key={fee.templateId} className="flex justify-between py-2">
                <span>{fee.hasException ? '(Adjusted) ' : ''}Fee Amount:</span>
                <span>${fee.adjustedAmount}</span>
              </div>
            ))}
          </div>

          <div className="border rounded p-4 bg-gray-50">
            <div className="flex justify-between font-semibold">
              <span>Total Due:</span>
              <span>${feeData.summary.totalDue}</span>
            </div>
            <div className="flex justify-between">
              <span>Total Paid:</span>
              <span>${feeData.summary.totalPaid}</span>
            </div>
            <div className="flex justify-between text-lg font-bold mt-2">
              <span>Balance:</span>
              <span>${feeData.summary.balance}</span>
            </div>
          </div>

          <div className="mt-4">
            <h4 className="font-semibold mb-2">Payment History</h4>
            <div className="border rounded">
              {feeData.transactions.map((tx: any) => (
                <div key={tx.id} className="border-b p-2 flex justify-between">
                  <span>{new Date(tx.paymentDate).toLocaleDateString()}</span>
                  <span>{tx.method}</span>
                  <span>${tx.amount}</span>
                </div>
              ))}
            </div>
          </div>
        </div>
      )}
    </div>
  )
}